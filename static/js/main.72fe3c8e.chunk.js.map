{"version":3,"sources":["practice/actions/TaskbookAction.js","App.js","serviceWorker.js","practice/reducers/TaskBookReducer.js","practice/reducers/RootReducer.js","index.js","practice/store/store.js"],"names":["Add","value","type","payload","updated","RemoveItemFromList","ChangeStatus","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","AddInfoHandler","setState","Addtaskmodal","modalClosehandle","event","Deletetaskmodal","Edittaskmodal","Viewtaskmodal","Titlechangehandler","Title","target","Descriptionchangehandler","Description","Duedatechangehandler","Duedate","Prioritychangehandler","Priority","UpdateTitlechangehandler","updatedTitle","UpdateDescriptionchangehandler","console","log","updatedDescription","UpdateDuedatechangehandler","updatedDuedate","UpdatePrioritychangehandler","updatedPriority","submithandler","preventDefault","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","state","alert","data","id","uuid","v4","CurrentState","CreatedAt","dispatch","setTimeout","i","completedata","Listdata","revserdata","length","push","MyDisplayData","Edithandler","edit_id","find","item","editid","updated_submithandler","newdata","DeleteModalhandler","Deletetaskid","DeleteTaskhandler","CompleteTaskhandler","completedid","Completedtask","SearchTaskhnadler","searchtext","newData","filter","itemData","toUpperCase","textData","indexOf","originalData","GroupSearchchangehandler","selectedvalue","MatcheData","obj","key","includes","SortCreatedat","sort","a","b","getTime","SortDuedata","MatchDataLow","MatchDatamedium","MatchDatahigh","MatchDatanone","modifieddata","concat","toConsumableArray","SortTaskhandler","SortData","reverse","Taskdataview","Requestviewdata","viewTitle","viewdDescription","viewDuedate","viewPriority","show","bind","assertThisInitialized","_React$createElement","_this2","AvailableData","AllTaskList","map","react_default","createElement","className","onClick","Button","variant","aria-hidden","TaskPendingList","TaskDoneList","Container","Row","Col","sm","Form","Label","Control","as","onChange","name","placeholder","Modal","Header","closeButton","Body","onSubmit","Group","controlId","maxLength","minLength","required","rows","selected","readOnly","defineProperty","esm","Table","bordered","Component","connect","Taskbook","Boolean","window","location","hostname","match","TaskBook","combineReducers","arguments","undefined","action","index","findIndex","x","splice","EditData","Data","store","createStore","rootreducer","applyMiddleware","thunk","jsx","es","src_App","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qRAAaA,EAAM,SAACC,GAAD,MAAY,CAC7BC,KAAM,WACNC,QAASF,IAEEG,EAAU,SAACH,GAAD,MAAY,CACjCC,KAAM,cACNC,QAASF,IAEEI,EAAqB,SAACJ,GAAD,MAAY,CAC5CC,KAAM,uBACNC,QAASF,IAGEK,EAAe,SAACL,GAAD,MAAY,CACtCC,KAAM,qBACNC,QAASF,0FCSLM,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAwCRQ,eAAiB,WACfP,EAAKQ,SAAS,CACZC,cAAc,KA3CCT,EA+CnBU,iBAAmB,SAACC,GAClBX,EAAKQ,SAAS,CACZC,cAAc,EACdG,iBAAiB,EACjBC,eAAe,EACfC,eAAe,KApDAd,EAyDnBe,mBAAqB,SAACJ,GACpBX,EAAKQ,SAAS,CACZQ,MAAOL,EAAMM,OAAOzB,SA3DLQ,EA8DnBkB,yBAA2B,SAACP,GAC1BX,EAAKQ,SAAS,CACZW,YAAaR,EAAMM,OAAOzB,SAhEXQ,EAmEnBoB,qBAAuB,SAACT,GACtBX,EAAKQ,SAAS,CACZa,QAASV,EAAMM,OAAOzB,SArEPQ,EAyEnBsB,sBAAwB,SAACX,GACvBX,EAAKQ,SAAS,CACZe,SAAUZ,EAAMM,OAAOzB,SA3ERQ,EAgFnBwB,yBAA2B,SAACb,GAC1BX,EAAKQ,SAAS,CACZiB,aAAcd,EAAMM,OAAOzB,SAlFZQ,EAqFnB0B,+BAAiC,SAACf,GAChCgB,QAAQC,IAAIjB,EAAMM,OAAOzB,OACzBQ,EAAKQ,SAAS,CACZqB,mBAAoBlB,EAAMM,OAAOzB,SAxFlBQ,EA4FnB8B,2BAA6B,SAACnB,GAE5BX,EAAKQ,SAAS,CACZuB,eAAgBpB,EAAMM,OAAOzB,SA/FdQ,EAmGnBgC,4BAA8B,SAACrB,GAE7BX,EAAKQ,SAAS,CACZyB,gBAAiBtB,EAAMM,OAAOzB,SAtGfQ,EA2GnBkC,cAAgB,SAACvB,GACfA,EAAMwB,iBACNnC,EAAKQ,SAAS,CACZC,cAAc,IAEhB,IAAI2B,EAAQ,IAAIC,KACZC,EAAKF,EAAMG,UACXC,EAAKJ,EAAMK,WAAa,EACxBC,EAAON,EAAMO,cASjB,GARIL,EAAK,KACPA,EAAK,IAAMA,GAETE,EAAK,KACPA,EAAK,IAAMA,GAEbJ,EAAQM,EAAO,IAAMF,EAAK,IAAMF,EAGT,OAArBtC,EAAK4C,MAAM5B,OACgB,OAA3BhB,EAAK4C,MAAMzB,aACY,OAAvBnB,EAAK4C,MAAMvB,SACa,OAAxBrB,EAAK4C,MAAMrB,SA+BX,OADAsB,MAAM,gCACC,EA7BP,GAAmB,KAAf7C,EAAK4C,MAAc,CACrB,IAAIE,EAAO,GACXA,EAAK9B,MAAQhB,EAAK4C,MAAM5B,MACxB8B,EAAK3B,YAAcnB,EAAK4C,MAAMzB,YAC9B2B,EAAKzB,QAAUrB,EAAK4C,MAAMvB,QAC1ByB,EAAKvB,SAAWvB,EAAK4C,MAAMrB,SAC3BuB,EAAKC,GAAKC,IAAKC,KACfH,EAAKI,aAAe,UACpBJ,EAAKK,UAAYf,EACjBpC,EAAKD,MAAMqD,SAAS7D,EAAIuD,IACxB9C,EAAKQ,SAAS,CACZQ,MAAO,GACPG,YAAa,GACbE,QAAS,GACTE,SAAU,KAId8B,WAAW,WACT,IACIC,EADAC,EAAevD,EAAKD,MAAMyD,SAE1BC,EAAa,GACjB,IAAKH,EAAIC,EAAaG,OAAS,EAAGJ,GAAK,EAAGA,IACxCG,EAAWE,KAAKJ,EAAaD,IAE/BtD,EAAKQ,SAAS,CAAEoD,cAAeH,KAC9B,MA5JYzD,EAmKnB6D,YAAc,SAAClD,GACb,IAAImD,EAAUnD,EAAMM,OAAO8B,GACrBD,EAAO9C,EAAKD,MAAMyD,SAASO,KAAK,SAACC,GAAD,OAAUA,EAAKjB,KAAOe,IAC5D9D,EAAKQ,SAAS,CACZK,eAAe,EACfoD,OAAQH,EACRrC,aAAcqB,EAAK9B,MACnBa,mBAAoBiB,EAAK3B,YACzBY,eAAgBe,EAAKzB,QACrBY,gBAAiBa,EAAKvB,YA5KPvB,EAgLnBkE,sBAAwB,SAACvD,GAKvB,GAJAA,EAAMwB,iBACNnC,EAAKQ,SAAS,CACZK,eAAe,IAEE,KAAfb,EAAK4C,MAAc,CACrB,IAAIuB,EAAU,GACdA,EAAQpB,GAAK/C,EAAK4C,MAAMqB,OACxBE,EAAQnD,MAAQhB,EAAK4C,MAAMnB,aAC3B0C,EAAQhD,YAAcnB,EAAK4C,MAAMf,mBACjCsC,EAAQ9C,QAAUrB,EAAK4C,MAAMb,eAC7BoC,EAAQ5C,SAAWvB,EAAK4C,MAAMX,gBAC9BjC,EAAKD,MAAMqD,SAASzD,EAAQwE,MA5LbnE,EAiMnBoE,mBAAqB,SAACrB,GACpB/C,EAAKQ,SAAS,CACZI,iBAAiB,EACjByD,aAActB,KApMC/C,EAwMnBsE,kBAAoB,WAClBtE,EAAKD,MAAMqD,SAASxD,EAAmBI,EAAK4C,MAAMyB,eAClDrE,EAAKQ,SAAS,CACZoD,cAAc5D,EAAKD,MAAMyD,SACzB5C,iBAAiB,KA5MFZ,EAiNnBuE,oBAAsB,SAAC5D,GACrB,IAAI6D,EAAc7D,EAAMM,OAAO8B,GAC/B/C,EAAKQ,SAAS,CACZiE,cAAe,SAEjBzE,EAAKD,MAAMqD,SAASvD,EAAa2E,KAtNhBxE,EAyNnB0E,kBAAoB,SAAC/D,GACnB,IAAIgE,EAAahE,EAAMM,OAAOzB,MAC9B,GAAmB,KAAfmF,EAAmB,CACrB,IAAMC,EAAU5E,EAAK4C,MAAMgB,cAAciB,OAAO,SAAUb,GACxD,IAAMc,EAAWd,EAAKhD,MAClBgD,EAAKhD,MAAM+D,cACX,GAAGA,cACDC,EAAWL,EAAWI,cAC5B,OAAOD,EAASG,QAAQD,IAAa,IAEvChF,EAAKQ,SAAS,CACZoD,cAAegB,QAEZ,CACL,IAAIM,EAAelF,EAAKD,MAAMyD,SAC9BxD,EAAKQ,SAAS,CAAEoD,cAAesB,MAxOhBlF,EA6OnBmF,yBAA2B,SAACxE,GAC1B,IAAIyE,EAAgBzE,EAAMM,OAAOzB,MAEjC,GAAqB,QAAjB4F,EAAyB,CAC3B,IAAIC,EAAarF,EAAKD,MAAMyD,SAASqB,OAAO,SAAUS,GACpD,IAAK,IAAIC,KAAOD,EAEd,GADA3D,QAAQC,IAAI,MAAO0D,EAAIC,IACnBD,EAAIC,GAAKC,SAASJ,GACpB,OAAOE,IAIbtF,EAAKQ,SAAS,CACZoD,cAAeyB,SAGb,GAAqB,aAAjBD,EAA8B,CACtC,IAAIK,EAAgBzF,EAAKD,MAAMyD,SAASkC,KAAK,SAAUC,EAAGC,GAGxD,OAFY,IAAIvD,KAAKsD,EAAExC,WAAW0C,UACtB,IAAIxD,KAAKuD,EAAEzC,WAAW0C,UACX,GAAK,IAE9B7F,EAAKQ,SAAS,CACZoD,cAAe6B,SAEZ,GAAsB,YAAlBL,EAA6B,CACfpF,EAAKD,MAAMyD,SAASqB,OAAO,SAAUS,GAC1D,IAAK,IAAIC,KAAOD,EACd,GAAIA,EAAIC,GAAKC,SAAS,WACpB,OAAOF,IAHb,IAOIQ,EAAc9F,EAAKD,MAAMyD,SAASkC,KAAK,SAAUC,EAAGC,GAGtD,OAFY,IAAIvD,KAAKsD,EAAEtE,SAASwE,UACpB,IAAIxD,KAAKuD,EAAEvE,SAASwE,UACT,GAAK,IAE9B7F,EAAKQ,SAAS,CACZoD,cAAekC,QAEZ,CACL,IAAIC,EAAe/F,EAAKD,MAAMyD,SAASqB,OAAO,SAAUS,GACtD,IAAK,IAAIC,KAAOD,EACd,GAAIA,EAAIC,GAAKC,SAAS,OACpB,OAAOF,IAITU,EAAkBhG,EAAKD,MAAMyD,SAASqB,OAAO,SAAUS,GACzD,IAAK,IAAIC,KAAOD,EACd,GAAIA,EAAIC,GAAKC,SAAS,UACpB,OAAOF,IAITW,EAAgBjG,EAAKD,MAAMyD,SAASqB,OAAO,SAAUS,GACvD,IAAK,IAAIC,KAAOD,EACd,GAAIA,EAAIC,GAAKC,SAAS,QACpB,OAAOF,IAITY,EAAgBlG,EAAKD,MAAMyD,SAASqB,OAAO,SAAUS,GACvD,IAAK,IAAIC,KAAOD,EACd,GAAIA,EAAIC,GAAKC,SAAS,QACpB,OAAOF,IAKTa,EAAY,GAAAC,OAAAnG,OAAAoG,EAAA,EAAApG,CACX8F,GADW9F,OAAAoG,EAAA,EAAApG,CAEX+F,GAFW/F,OAAAoG,EAAA,EAAApG,CAGXgG,GAHWhG,OAAAoG,EAAA,EAAApG,CAIXiG,IAELlG,EAAKQ,SAAS,CACZoD,cAAeuC,MA3TFnG,EAgUnBsG,gBAAkB,WAChB,IAAIC,EAAWvG,EAAK4C,MAAMgB,cAAc4C,UACxCxG,EAAKQ,SAAS,CAAEoD,cAAe2C,KAlUdvG,EAoUnByG,aAAe,SAAC1D,GACd,IAAI2D,EAAkB1G,EAAK4C,MAAMgB,cAAcG,KAAK,SAACC,GAAD,OAAUA,EAAKjB,KAAOA,IAC1E/C,EAAKQ,SAAS,CACZM,eAAe,EACf6F,UAAWD,EAAgB1F,MAC3B4F,iBAAkBF,EAAgBvF,YAClC0F,YAAaH,EAAgBrF,QAC7ByF,aAAcJ,EAAgBnF,YAzUhCvB,EAAK4C,MAAQ,CACX5B,MAAO,KACPG,YAAa,KACbE,QAAS,KACTE,SAAU,KACVqC,cAAe,KACfa,cAAe,KAEfR,OAAQ,KACRxC,aAAc,KACdI,mBAAoB,KACpBE,eAAgB,KAChBE,gBAAiB,KACjB0E,UAAW,KACXC,iBAAkB,KAClBC,YAAa,KACbC,aAAc,KAEdC,MAAM,EACNtG,cAAc,EACdI,eAAe,EACfC,eAAe,EACfF,iBAAiB,EACjByD,aAAc,MAGhBrE,EAAKkC,cAAgBlC,EAAKkC,cAAc8E,KAAnB/G,OAAAgH,EAAA,EAAAhH,QAAAgH,EAAA,EAAAhH,CAAAD,KACrBA,EAAKsE,kBAAoBtE,EAAKsE,kBAAkB0C,KAAvB/G,OAAAgH,EAAA,EAAAhH,QAAAgH,EAAA,EAAAhH,CAAAD,KACzBA,EAAKoE,mBAAqBpE,EAAKoE,mBAAmB4C,KAAxB/G,OAAAgH,EAAA,EAAAhH,QAAAgH,EAAA,EAAAhH,CAAAD,KAC1BA,EAAK6D,YAAc7D,EAAK6D,YAAYmD,KAAjB/G,OAAAgH,EAAA,EAAAhH,QAAAgH,EAAA,EAAAhH,CAAAD,KACnBA,EAAKuE,oBAAsBvE,EAAKuE,oBAAoByC,KAAzB/G,OAAAgH,EAAA,EAAAhH,QAAAgH,EAAA,EAAAhH,CAAAD,KAC3BA,EAAKO,eAAiBP,EAAKO,eAAeyG,KAApB/G,OAAAgH,EAAA,EAAAhH,QAAAgH,EAAA,EAAAhH,CAAAD,KACtBA,EAAKU,iBAAmBV,EAAKU,iBAAiBsG,KAAtB/G,OAAAgH,EAAA,EAAAhH,QAAAgH,EAAA,EAAAhH,CAAAD,KACxBA,EAAK0E,kBAAoB1E,EAAK0E,kBAAkBsC,KAAvB/G,OAAAgH,EAAA,EAAAhH,QAAAgH,EAAA,EAAAhH,CAAAD,KACzBA,EAAKmF,yBAA2BnF,EAAKmF,yBAAyB6B,KAA9B/G,OAAAgH,EAAA,EAAAhH,QAAAgH,EAAA,EAAAhH,CAAAD,KAChCA,EAAKsG,gBAAkBtG,EAAKsG,gBAAgBU,KAArB/G,OAAAgH,EAAA,EAAAhH,QAAAgH,EAAA,EAAAhH,CAAAD,KACvBA,EAAKyG,aAAezG,EAAKyG,aAAaO,KAAlB/G,OAAAgH,EAAA,EAAAhH,QAAAgH,EAAA,EAAAhH,CAAAD,KAtCHA,wEA+UV,IAAAkH,EAAAC,EAAAhH,KACHiH,EAAgBjH,KAAKyC,MAAMgB,cAG/B,GAAsB,OAAlBwD,EACF,IAAIC,EAAcD,EAAcE,IAAI,SAACtD,GAAD,OAClCuD,EAAA5B,EAAA6B,cAAA,MAAIjC,IAAKvB,EAAKjB,GAAI0E,UAAiC,SAAtBzD,EAAKd,aAA0B,OAAS,IACnEqE,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,QAAQC,QAAS,kBAAMP,EAAKV,aAAazC,EAAKjB,MACzDiB,EAAKhD,OAERuG,EAAA5B,EAAA6B,cAAA,UAAKxD,EAAKzC,UACVgG,EAAA5B,EAAA6B,cAAA,UAAKxD,EAAKb,WACVoE,EAAA5B,EAAA6B,cAAA,UAAKxD,EAAK3C,SACVkG,EAAA5B,EAAA6B,cAAA,UACED,EAAA5B,EAAA6B,cAACG,EAAA,EAAD,CAAQC,QAAQ,iBACfL,EAAA5B,EAAA6B,cAAA,KAAGC,UAAU,wBACVI,cAAY,OACZ9E,GAAIiB,EAAKjB,GACT2E,QAASP,EAAKtD,eAII,WAArBG,EAAKd,aACJqE,EAAA5B,EAAA6B,cAACG,EAAA,EAAD,CACEC,QAAQ,eACR7E,GAAIiB,EAAKjB,GACT2E,QAASP,EAAK5C,qBAHhB,QAOAgD,EAAA5B,EAAA6B,cAACG,EAAA,EAAD,CACEC,QAAQ,iBACRH,UAAU,gBACV1E,GAAIiB,EAAKjB,IAHX,UAIU,KAIZwE,EAAA5B,EAAA6B,cAACG,EAAA,EAAD,CAAQC,QAAQ,UACdL,EAAA5B,EAAA6B,cAAA,KAAGC,UAAU,cACXI,cAAY,OACZH,QAAS,kBAAMP,EAAK/C,mBAAmBJ,EAAKjB,YAelD+E,EARqBV,EAAcvC,OAAO,SAAUS,GACtD,IAAK,IAAIC,KAAOD,EACd,GAAIA,EAAIC,GAAKC,SAAS,WACpB,OAAOF,IAK4BgC,IAAI,SAACtD,GAAD,OAC3CuD,EAAA5B,EAAA6B,cAAA,MAAIjC,IAAKvB,EAAKjB,IACZwE,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,QAAQC,QAAS,kBAAMP,EAAKV,aAAazC,EAAKjB,MAAOiB,EAAKhD,OACxEuG,EAAA5B,EAAA6B,cAAA,UAAKxD,EAAKzC,UACVgG,EAAA5B,EAAA6B,cAAA,UAAKxD,EAAKb,WACVoE,EAAA5B,EAAA6B,cAAA,UAAKxD,EAAK3C,SACVkG,EAAA5B,EAAA6B,cAAA,UACED,EAAA5B,EAAA6B,cAACG,EAAA,EAAD,CAAQC,QAAQ,iBACdL,EAAA5B,EAAA6B,cAAA,KACEC,UAAU,wBACVI,cAAY,OACZ9E,GAAIiB,EAAKjB,GACT2E,QAASP,EAAKtD,eAGlB0D,EAAA5B,EAAA6B,cAAA,YAEyB,YAAtBxD,EAAKd,aACJqE,EAAA5B,EAAA6B,cAACG,EAAA,EAAD,CACEF,UAAU,gBACVG,QAAQ,eACR7E,GAAIiB,EAAKjB,GACT2E,QAASP,EAAK5C,qBAJhB,QAQAgD,EAAA5B,EAAA6B,cAACG,EAAA,EAAD,CAAQC,QAAQ,iBAAiB7E,GAAIiB,EAAKjB,IAA1C,YAKFwE,EAAA5B,EAAA6B,cAACG,EAAA,EAAD,CAAQC,QAAQ,UAASL,EAAA5B,EAAA6B,cAAA,KAAGC,UAAU,cAAcI,cAAY,OAAOH,QAASP,EAAK/C,0BAazF2D,EARkBX,EAAcvC,OAAO,SAAUS,GACnD,IAAK,IAAIC,KAAOD,EACd,GAAIA,EAAIC,GAAKC,SAAS,QACpB,OAAOF,IAKsBgC,IAAI,SAACtD,GAAD,OACrCuD,EAAA5B,EAAA6B,cAAA,MAAIjC,IAAKvB,EAAKjB,IACZwE,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,QAAQC,QAAS,kBAAMP,EAAKV,aAAazC,EAAKjB,MAAMiB,EAAKhD,OACvEuG,EAAA5B,EAAA6B,cAAA,UAAKxD,EAAKzC,UACVgG,EAAA5B,EAAA6B,cAAA,UAAKxD,EAAKb,WACVoE,EAAA5B,EAAA6B,cAAA,UAAKxD,EAAK3C,SACVkG,EAAA5B,EAAA6B,cAAA,UACED,EAAA5B,EAAA6B,cAACG,EAAA,EAAD,CAAQC,QAAQ,iBACdL,EAAA5B,EAAA6B,cAAA,KAAGC,UAAU,wBACXI,cAAY,OACZ9E,GAAIiB,EAAKjB,GACT2E,QAASP,EAAKtD,eAGlB0D,EAAA5B,EAAA6B,cAAA,YACyB,YAAtBxD,EAAKd,aACJqE,EAAA5B,EAAA6B,cAACG,EAAA,EAAD,CACEF,UAAU,gBACVG,QAAQ,eACR7E,GAAIiB,EAAKjB,GACT2E,QAASP,EAAK5C,qBAJhB,OAKO,KAGPgD,EAAA5B,EAAA6B,cAACG,EAAA,EAAD,CAAQC,QAAQ,iBAAiB7E,GAAIiB,EAAKjB,IAA1C,UACU,MAIdwE,EAAA5B,EAAA6B,cAACG,EAAA,EAAD,CAAQC,QAAQ,UAASL,EAAA5B,EAAA6B,cAAA,KAAGC,UAAU,cAAcI,cAAY,OAAOH,QAASP,EAAK/C,0BAM7F,OACEmD,EAAA5B,EAAA6B,cAAA,WACED,EAAA5B,EAAA6B,cAACQ,EAAA,EAAD,KACET,EAAA5B,EAAA6B,cAACS,EAAA,EAAD,KACEV,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,EAAGV,UAAU,aACpBF,EAAA5B,EAAA6B,cAAA,MAAIC,UAAU,iBAAd,aAEFF,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,EAAGV,UAAU,cACpBF,EAAA5B,EAAA6B,cAAA,WACED,EAAA5B,EAAA6B,cAAA,KACEC,UAAU,0BACVI,cAAY,OACZH,QAASvH,KAAKI,oBAKtBgH,EAAA5B,EAAA6B,cAACS,EAAA,EAAD,KACEV,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,EAAGV,UAAU,aACpBF,EAAA5B,EAAA6B,cAACY,EAAA,EAAKC,MAAN,kBACAd,EAAA5B,EAAA6B,cAACY,EAAA,EAAKE,QAAN,CACEC,GAAG,SACHC,SAAUrI,KAAKgF,yBACfsD,KAAK,WACLlB,EAAA5B,EAAA6B,cAAA,UAAQhI,MAAM,QAAd,QACA+H,EAAA5B,EAAA6B,cAAA,UAAQhI,MAAM,aAAd,cACA+H,EAAA5B,EAAA6B,cAAA,UAAQhI,MAAM,WAAd,cACA+H,EAAA5B,EAAA6B,cAAA,UAAQhI,MAAM,YAAd,cAGJ+H,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,GACPZ,EAAA5B,EAAA6B,cAACY,EAAA,EAAKC,MAAN,eACAd,EAAA5B,EAAA6B,cAACY,EAAA,EAAKE,QAAN,CACE7I,KAAK,OACLgJ,KAAK,SACLC,YAAY,oBACZF,SAAUrI,KAAKuE,sBAIrB6C,EAAA5B,EAAA6B,cAAA,WACED,EAAA5B,EAAA6B,cAACmB,EAAA,EAAD,CAAO5B,KAAM5G,KAAKyC,MAAMnC,cACtB8G,EAAA5B,EAAA6B,cAACmB,EAAA,EAAMC,OAAP,CAAcC,aAAW,EAACnB,QAASvH,KAAKO,kBACtC6G,EAAA5B,EAAA6B,cAACmB,EAAA,EAAM3H,MAAP,kBAEFuG,EAAA5B,EAAA6B,cAACmB,EAAA,EAAMG,KAAP,KACEvB,EAAA5B,EAAA6B,cAACY,EAAA,EAAD,CAAMW,SAAU5I,KAAK+B,eACnBqF,EAAA5B,EAAA6B,cAACS,EAAA,EAAD,KACEV,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,IACPZ,EAAA5B,EAAA6B,cAACY,EAAA,EAAKE,QAAN,CACE7I,KAAK,SACLgJ,KAAK,eACLjJ,MAAM,YACR+H,EAAA5B,EAAA6B,cAACY,EAAA,EAAKY,MAAN,CAAYC,UAAU,kBACpB1B,EAAA5B,EAAA6B,cAACY,EAAA,EAAKC,MAAN,cACAd,EAAA5B,EAAA6B,cAACY,EAAA,EAAKE,QAAN,CACE7I,KAAK,OACL+I,SAAUrI,KAAKY,mBACf0H,KAAK,QACLS,UAAU,MACVC,UAAU,KACVC,UAAQ,MAGd7B,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,IACPZ,EAAA5B,EAAA6B,cAACY,EAAA,EAAKY,MAAN,CAAYC,UAAU,wBACpB1B,EAAA5B,EAAA6B,cAACY,EAAA,EAAKC,MAAN,qBACAd,EAAA5B,EAAA6B,cAACY,EAAA,EAAKE,QAAN,CACEC,GAAG,WACHc,KAAK,IACLb,SAAUrI,KAAKe,yBACfgI,UAAU,MACVC,UAAU,KACVV,KAAK,cACLW,UAAQ,MAId7B,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,GACPZ,EAAA5B,EAAA6B,cAACY,EAAA,EAAKY,MAAN,CAAYC,UAAU,oBACpB1B,EAAA5B,EAAA6B,cAACY,EAAA,EAAKC,MAAN,iBACAd,EAAA5B,EAAA6B,cAACY,EAAA,EAAKE,QAAN,CACE7I,KAAK,OACL+I,SAAUrI,KAAKiB,qBACfqH,KAAK,UACLW,UAAQ,MAId7B,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,GACPZ,EAAA5B,EAAA6B,cAACY,EAAA,EAAKY,MAAN,CAAYC,UAAU,YACpB1B,EAAA5B,EAAA6B,cAACY,EAAA,EAAKC,MAAN,kBACAd,EAAA5B,EAAA6B,cAACY,EAAA,EAAKE,QAAN,CACEC,GAAG,SACHC,SAAUrI,KAAKmB,sBACfmH,KAAK,WACLW,UAAQ,GAER7B,EAAA5B,EAAA6B,cAAA,8BACAD,EAAA5B,EAAA6B,cAAA,UAAQhI,MAAM,QAAd,QACA+H,EAAA5B,EAAA6B,cAAA,UAAQhI,MAAM,OAAd,OACA+H,EAAA5B,EAAA6B,cAAA,UAAQhI,MAAM,UAAd,UACA+H,EAAA5B,EAAA6B,cAAA,UAAQhI,MAAM,QAAd,WAIN+H,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,IACPZ,EAAA5B,EAAA6B,cAACY,EAAA,EAAKY,MAAN,CAAYvB,UAAU,cACpBF,EAAA5B,EAAA6B,cAACG,EAAA,EAAD,CACEC,QAAQ,YACRnI,KAAK,SACLgI,UAAU,8BACVC,QAASvH,KAAKO,kBAJhB,UAQA6G,EAAA5B,EAAA6B,cAACG,EAAA,EAAD,CACEC,QAAQ,UACRnI,KAAK,SACLgI,UAAU,0BAHZ,uBAcdF,EAAA5B,EAAA6B,cAAA,WACED,EAAA5B,EAAA6B,cAACmB,EAAA,EAAD,CAAO5B,KAAM5G,KAAKyC,MAAM/B,eACtB0G,EAAA5B,EAAA6B,cAACmB,EAAA,EAAMC,OAAP,CAAcC,aAAW,EAACnB,QAASvH,KAAKO,kBACtC6G,EAAA5B,EAAA6B,cAACmB,EAAA,EAAM3H,MAAP,mBAEFuG,EAAA5B,EAAA6B,cAACmB,EAAA,EAAMG,KAAP,KACEvB,EAAA5B,EAAA6B,cAACY,EAAA,EAAD,CAAMW,SAAU5I,KAAK+D,uBACnBqD,EAAA5B,EAAA6B,cAACS,EAAA,EAAD,KACEV,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,IACPZ,EAAA5B,EAAA6B,cAACY,EAAA,EAAKE,QAAN,CACE7I,KAAK,SACLgJ,KAAK,KACLjJ,MAAOW,KAAKyC,MAAMkB,UAEpByD,EAAA5B,EAAA6B,cAACY,EAAA,EAAKY,MAAN,CAAYC,UAAU,WACpB1B,EAAA5B,EAAA6B,cAACY,EAAA,EAAKC,MAAN,gBACAd,EAAA5B,EAAA6B,cAACY,EAAA,EAAKE,QAAN,CACE7I,KAAK,OACL+I,SAAUrI,KAAKqB,yBACfiH,KAAK,QACLS,UAAU,MACVC,UAAU,KACV3J,MAAOW,KAAKyC,MAAMnB,iBAIxB8F,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,IACPZ,EAAA5B,EAAA6B,cAACY,EAAA,EAAKY,MAAN,CAAYC,UAAU,eACpB1B,EAAA5B,EAAA6B,cAACY,EAAA,EAAKC,MAAN,qBACAd,EAAA5B,EAAA6B,cAACY,EAAA,EAAKE,QAAN,CACEC,GAAG,WACHc,KAAK,IACLb,SAAUrI,KAAKuB,+BACfwH,UAAU,MACVC,UAAU,KACVV,KAAK,cACLjJ,MAAOW,KAAKyC,MAAMf,uBAIxB0F,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,GACPZ,EAAA5B,EAAA6B,cAACY,EAAA,EAAKY,MAAN,CAAYC,UAAU,WACpB1B,EAAA5B,EAAA6B,cAACY,EAAA,EAAKC,MAAN,iBACAd,EAAA5B,EAAA6B,cAACY,EAAA,EAAKE,QAAN,CACE7I,KAAK,OACL+I,SAAUrI,KAAK2B,2BACf2G,KAAK,UACLjJ,MAAOW,KAAKyC,MAAMb,mBAIxBwF,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,GACPZ,EAAA5B,EAAA6B,cAACY,EAAA,EAAKY,MAAN,CAAYC,UAAU,YACpB1B,EAAA5B,EAAA6B,cAACY,EAAA,EAAKC,MAAN,kBACAd,EAAA5B,EAAA6B,cAACY,EAAA,EAAKE,QAAN,CACEC,GAAG,SACHC,SAAUrI,KAAK6B,4BACfyG,KAAK,WACLjJ,MAAOW,KAAKyC,MAAMX,iBAClBsF,EAAA5B,EAAA6B,cAAA,UAAQ8B,UAAQ,GAAhB,gBACA/B,EAAA5B,EAAA6B,cAAA,UAAQhI,MAAM,QAAd,QACA+H,EAAA5B,EAAA6B,cAAA,UAAQhI,MAAM,OAAd,OACA+H,EAAA5B,EAAA6B,cAAA,UAAQhI,MAAM,UAAd,UACA+H,EAAA5B,EAAA6B,cAAA,UAAQhI,MAAM,QAAd,WAIN+H,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,IACPZ,EAAA5B,EAAA6B,cAACY,EAAA,EAAKY,MAAN,CAAYvB,UAAU,cACpBF,EAAA5B,EAAA6B,cAACG,EAAA,EAAD,CACEC,QAAQ,YACRH,UAAU,8BACVC,QAASvH,KAAKO,kBAHhB,UAOA6G,EAAA5B,EAAA6B,cAACG,EAAA,EAAD,CACEC,QAAQ,UACRnI,KAAK,SACLgI,UAAU,0BAHZ,eAcdF,EAAA5B,EAAA6B,cAAA,WACED,EAAA5B,EAAA6B,cAACmB,EAAA,EAAD,CAAO5B,KAAM5G,KAAKyC,MAAM9B,eACtByG,EAAA5B,EAAA6B,cAACmB,EAAA,EAAMC,OAAP,CAAcC,aAAW,EAACnB,QAASvH,KAAKO,kBACtC6G,EAAA5B,EAAA6B,cAACmB,EAAA,EAAM3H,MAAP,mBAEFuG,EAAA5B,EAAA6B,cAACmB,EAAA,EAAMG,KAAP,KACEvB,EAAA5B,EAAA6B,cAACY,EAAA,EAAD,KACEb,EAAA5B,EAAA6B,cAACS,EAAA,EAAD,KACEV,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,IACPZ,EAAA5B,EAAA6B,cAACY,EAAA,EAAKE,QAAN,CACE7I,KAAK,SACLgJ,KAAK,KACLjJ,MAAOW,KAAKyC,MAAMkB,UAEpByD,EAAA5B,EAAA6B,cAACY,EAAA,EAAKY,MAAN,CAAYC,UAAU,WACpB1B,EAAA5B,EAAA6B,cAACY,EAAA,EAAKC,MAAN,gBACAd,EAAA5B,EAAA6B,cAACY,EAAA,EAAKE,QAAN,CACE7I,KAAK,OACL+I,SAAUrI,KAAKqB,yBACfiH,KAAK,QACLjJ,MAAOW,KAAKyC,MAAM+D,UAClB4C,UAAQ,MAIdhC,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,IACPZ,EAAA5B,EAAA6B,cAACY,EAAA,EAAKY,MAAN,CAAYC,UAAU,eACpB1B,EAAA5B,EAAA6B,cAACY,EAAA,EAAKC,MAAN,qBACAd,EAAA5B,EAAA6B,cAACY,EAAA,EAAKE,QAAN,CACEC,GAAG,WACHc,KAAK,IACLb,SAAUrI,KAAKuB,+BACf+G,KAAK,cACLjJ,MAAOW,KAAKyC,MAAMgE,iBAClB2C,UAAQ,MAIdhC,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,GACPZ,EAAA5B,EAAA6B,cAACY,EAAA,EAAKY,MAAN,CAAYC,UAAU,WACpB1B,EAAA5B,EAAA6B,cAACY,EAAA,EAAKC,MAAN,iBACAd,EAAA5B,EAAA6B,cAACY,EAAA,EAAKE,QAAN,CACE7I,KAAK,OACL+I,SAAUrI,KAAK2B,2BACf2G,KAAK,UACLjJ,MAAOW,KAAKyC,MAAMiE,YAClB0C,UAAQ,MAIdhC,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,GACPZ,EAAA5B,EAAA6B,cAACY,EAAA,EAAKY,MAAN,CAAYC,UAAU,YACpB1B,EAAA5B,EAAA6B,cAACY,EAAA,EAAKC,MAAN,kBACAd,EAAA5B,EAAA6B,cAACY,EAAA,EAAKE,QAAN,CACEC,GAAG,SACHC,SAAUrI,KAAK6B,4BACfyG,KAAK,WACLjJ,MAAOW,KAAKyC,MAAMkE,aAClByC,UAAQ,GAERhC,EAAA5B,EAAA6B,cAAA,UAAQ8B,UAAQ,GAAhB,gBACA/B,EAAA5B,EAAA6B,cAAA,UAAQhI,MAAM,QAAd,QACA+H,EAAA5B,EAAA6B,cAAA,UAAQhI,MAAM,OAAd,OACA+H,EAAA5B,EAAA6B,cAAA,UAAQhI,MAAM,UAAd,UACA+H,EAAA5B,EAAA6B,cAAA,UAAQhI,MAAM,QAAd,WAIN+H,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,IACPZ,EAAA5B,EAAA6B,cAACY,EAAA,EAAKY,MAAN,CAAYvB,UAAU,cACpBF,EAAA5B,EAAA6B,cAACG,EAAA,EAAD,CACEC,QAAQ,YACRH,UAAU,8BACVC,QAASvH,KAAKO,kBAHhB,iBAcd6G,EAAA5B,EAAA6B,cAAA,WACED,EAAA5B,EAAA6B,cAACmB,EAAA,EAAD,CAAO5B,KAAM5G,KAAKyC,MAAMhC,iBACtB2G,EAAA5B,EAAA6B,cAACmB,EAAA,EAAMC,OAAP,CACEC,aAAW,EACXnB,QAASvH,KAAKO,mBAEhB6G,EAAA5B,EAAA6B,cAACmB,EAAA,EAAMG,KAAP,KACEvB,EAAA5B,EAAA6B,cAACS,EAAA,EAAD,KACEV,EAAA5B,EAAA6B,cAACU,EAAA,EAAD,CAAKC,GAAI,IACPZ,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,eACbF,EAAA5B,EAAA6B,cAAA,gDACAD,EAAA5B,EAAA6B,cAACG,EAAA,EAAD,CACEC,QAAQ,YACRnI,KAAK,SACLgI,UAAU,8BACVC,QAASvH,KAAKO,kBAJhB,UAQA6G,EAAA5B,EAAA6B,cAACG,EAAA,GAADT,EAAA,CACEU,QAAQ,UACRnI,KAAK,UAFPQ,OAAAuJ,EAAA,EAAAvJ,CAAAiH,EAAA,UAGU,UAHVjH,OAAAuJ,EAAA,EAAAvJ,CAAAiH,EAAA,KAIM/G,KAAKyC,MAAMyB,cAJjBpE,OAAAuJ,EAAA,EAAAvJ,CAAAiH,EAAA,UAKW/G,KAAKmE,mBALhB4C,GAAA,gBAeZK,EAAA5B,EAAA6B,cAAA,OAAKC,UAAU,YACbF,EAAA5B,EAAA6B,cAACiC,EAAA,EAAD,KACElC,EAAA5B,EAAA6B,cAACiC,EAAA,EAAD,KACElC,EAAA5B,EAAA6B,cAACiC,EAAA,EAAD,YACAlC,EAAA5B,EAAA6B,cAACiC,EAAA,EAAD,gBACAlC,EAAA5B,EAAA6B,cAACiC,EAAA,EAAD,mBAEFlC,EAAA5B,EAAA6B,cAACiC,EAAA,EAAD,KACElC,EAAA5B,EAAA6B,cAAA,WACED,EAAA5B,EAAA6B,cAACkC,EAAA,EAAD,CAAOC,UAAQ,GACbpC,EAAA5B,EAAA6B,cAAA,aACED,EAAA5B,EAAA6B,cAAA,MAAIE,QAASvH,KAAKmG,iBAChBiB,EAAA5B,EAAA6B,cAAA,qBACAD,EAAA5B,EAAA6B,cAAA,sBACAD,EAAA5B,EAAA6B,cAAA,wBACAD,EAAA5B,EAAA6B,cAAA,oBACAD,EAAA5B,EAAA6B,cAAA,uBAGJD,EAAA5B,EAAA6B,cAAA,aAAQH,MAIdE,EAAA5B,EAAA6B,cAACiC,EAAA,EAAD,KACElC,EAAA5B,EAAA6B,cAAA,WACED,EAAA5B,EAAA6B,cAACkC,EAAA,EAAD,CAAOC,UAAQ,GACbpC,EAAA5B,EAAA6B,cAAA,aACED,EAAA5B,EAAA6B,cAAA,MAAIE,QAASvH,KAAKmG,iBAChBiB,EAAA5B,EAAA6B,cAAA,qBACAD,EAAA5B,EAAA6B,cAAA,sBACAD,EAAA5B,EAAA6B,cAAA,wBACAD,EAAA5B,EAAA6B,cAAA,oBACAD,EAAA5B,EAAA6B,cAAA,uBAGJD,EAAA5B,EAAA6B,cAAA,aAAQM,MAIdP,EAAA5B,EAAA6B,cAACiC,EAAA,EAAD,KACElC,EAAA5B,EAAA6B,cAAA,WACED,EAAA5B,EAAA6B,cAACkC,EAAA,EAAD,CAAOC,UAAQ,GACbpC,EAAA5B,EAAA6B,cAAA,aACED,EAAA5B,EAAA6B,cAAA,MAAIE,QAASvH,KAAKmG,iBAChBiB,EAAA5B,EAAA6B,cAAA,qBACAD,EAAA5B,EAAA6B,cAAA,sBACAD,EAAA5B,EAAA6B,cAAA,wBACAD,EAAA5B,EAAA6B,cAAA,oBACAD,EAAA5B,EAAA6B,cAAA,uBAGJD,EAAA5B,EAAA6B,cAAA,aAAQO,iBA51BV6B,aA62BHC,cALS,SAACjH,GACvB,MAAO,CACLY,SAAUZ,EAAMkH,WAGLD,CAAyB/J,GCz3BpBiK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+EClBAC,EAAW,GCGFC,cAAgB,CAC3BP,SDFW,WAA8B,IAA7BlH,EAA6B0H,UAAA5G,OAAA,QAAA6G,IAAAD,UAAA,GAAAA,UAAA,GAArBF,EAAUI,EAAWF,UAAA5G,OAAA,EAAA4G,UAAA,QAAAC,EAC3C,OAAQC,EAAO/K,MACb,IAAK,WACL,SAAA2G,OAAAnG,OAAAoG,EAAA,EAAApG,CAAW2C,GAAX,CAAkB4H,EAAO9K,UAEzB,IAAK,uBACH,IAAI4J,EAAWkB,EAAO9K,QAClB+K,EAAQ7H,EAAM8H,UAAU,SAAAC,GAAC,OAAIA,EAAE5H,IAAMuG,IAEzC,OADA1G,EAAMgI,OAAOH,EAAO,GACbxK,OAAAoG,EAAA,EAAApG,CAAI2C,GAEb,IAAK,cACH,IAAIiI,EAAWL,EAAO9K,QAChBoL,EAAOlI,EAAMmB,KAAK,SAACC,GAAD,OAAUA,EAAKjB,KAAO8H,EAAS9H,KAKvD,OAJA+H,EAAK9J,MAAQ6J,EAAS7J,MACtB8J,EAAK3J,YAAc0J,EAAS1J,YAC5B2J,EAAKzJ,QAAUwJ,EAASxJ,QACxByJ,EAAKvJ,SAAWsJ,EAAStJ,SAClBtB,OAAAoG,EAAA,EAAApG,CAAI2C,GAEb,IAAK,qBAGH,OAFgBA,EAAMmB,KAAK,SAACC,GAAD,OAAUA,EAAKjB,KAAOyH,EAAO9K,UAChDwD,aAAe,OAChBjD,OAAAoG,EAAA,EAAApG,CAAI2C,GAEb,QACE,OAAOA,MEpBPmI,ECFYC,YAAYC,EAAYC,YAAgBC,MDIpDC,EACF7D,EAAA5B,EAAA6B,cAAC6D,EAAA,EAAD,CAAUN,MAAOA,GACdxD,EAAA5B,EAAA6B,cAAC8D,EAAD,OAGP3J,QAAQC,IAAI,MAAMmJ,EAAMQ,YACxBC,IAASC,OAAOL,EAAKM,SAASC,eAAe,SHiHvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.72fe3c8e.chunk.js","sourcesContent":["export const Add = (value) => ({\n  type: \"ADD_LIST\",\n  payload: value,\n});\nexport const updated = (value) => ({\n  type: \"FOR_UPDATED\",\n  payload: value,\n});\nexport const RemoveItemFromList = (value) => ({\n  type: \"REMOVE_ITEM_FOM_LIST\",\n  payload: value,\n});\n\nexport const ChangeStatus = (value) => ({\n  type: \"CHANGE_STATUS_TASK\",\n  payload: value,\n});\n","import React, { Component } from \"react\";\nimport ReactDom from \"react-dom\";\nimport uuid from \"uuid\";\nimport {\n  Add,\n  RemoveItemFromList,\n  updated,\n  ChangeStatus,\n} from \"./practice/actions/TaskbookAction\";\nimport {\n  Col,\n  Button,\n  Container,\n  Row,\n  Form,\n  variant,\n  Modal,\n  Table,\n} from \"react-bootstrap\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Title: null,\n      Description: null,\n      Duedate: null,\n      Priority: null,\n      MyDisplayData: null,\n      Completedtask: null,\n\n      editid: null,\n      updatedTitle: null,\n      updatedDescription: null,\n      updatedDuedate: null,\n      updatedPriority: null,\n      viewTitle: null,\n      viewdDescription: null,\n      viewDuedate: null,\n      viewPriority: null,\n\n      show: false,\n      Addtaskmodal: false,\n      Edittaskmodal: false,\n      Viewtaskmodal: false,\n      Deletetaskmodal: false,\n      Deletetaskid: null,\n    };\n\n    this.submithandler = this.submithandler.bind(this);\n    this.DeleteTaskhandler = this.DeleteTaskhandler.bind(this);\n    this.DeleteModalhandler = this.DeleteModalhandler.bind(this);\n    this.Edithandler = this.Edithandler.bind(this);\n    this.CompleteTaskhandler = this.CompleteTaskhandler.bind(this);\n    this.AddInfoHandler = this.AddInfoHandler.bind(this);\n    this.modalClosehandle = this.modalClosehandle.bind(this);\n    this.SearchTaskhnadler = this.SearchTaskhnadler.bind(this);\n    this.GroupSearchchangehandler = this.GroupSearchchangehandler.bind(this);\n    this.SortTaskhandler = this.SortTaskhandler.bind(this);\n    this.Taskdataview = this.Taskdataview.bind(this);\n  }\n\n  AddInfoHandler = () => {\n    this.setState({\n      Addtaskmodal: true,\n    });\n  };\n\n  modalClosehandle = (event) => {\n    this.setState({\n      Addtaskmodal: false,\n      Deletetaskmodal: false,\n      Edittaskmodal: false,\n      Viewtaskmodal: false,\n    });\n  };\n\n  // for add task handler//\n  Titlechangehandler = (event) => {\n    this.setState({\n      Title: event.target.value,\n    });\n  };\n  Descriptionchangehandler = (event) => {\n    this.setState({\n      Description: event.target.value,\n    });\n  };\n  Duedatechangehandler = (event) => {\n    this.setState({\n      Duedate: event.target.value,\n    });\n  };\n\n  Prioritychangehandler = (event) => {\n    this.setState({\n      Priority: event.target.value,\n    });\n  };\n\n  //  updates change handler\n  UpdateTitlechangehandler = (event) => {\n    this.setState({\n      updatedTitle: event.target.value,\n    });\n  };\n  UpdateDescriptionchangehandler = (event) => {\n    console.log(event.target.value);\n    this.setState({\n      updatedDescription: event.target.value,\n    });\n  };\n\n  UpdateDuedatechangehandler = (event) => {\n    // console.log(event.target.value);\n    this.setState({\n      updatedDuedate: event.target.value,\n    });\n  };\n\n  UpdatePrioritychangehandler = (event) => {\n    // console.log(event.target.value);\n    this.setState({\n      updatedPriority: event.target.value,\n    });\n  };\n\n  // for add value\n  submithandler = (event) => {\n    event.preventDefault();\n    this.setState({\n      Addtaskmodal: false,\n    });\n    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth() + 1;\n    var yyyy = today.getFullYear();\n    if (dd < 10) {\n      dd = \"0\" + dd;\n    }\n    if (mm < 10) {\n      mm = \"0\" + mm;\n    }\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n\n    if (\n      this.state.Title !== null &&\n      this.state.Description !== null &&\n      this.state.Duedate !== null &&\n      this.state.Priority !== null\n    ) {\n      if (this.state !== \"\") {\n        var data = {};\n        data.Title = this.state.Title;\n        data.Description = this.state.Description;\n        data.Duedate = this.state.Duedate;\n        data.Priority = this.state.Priority;\n        data.id = uuid.v4();\n        data.CurrentState = \"pending\";\n        data.CreatedAt = today;\n        this.props.dispatch(Add(data));\n        this.setState({\n          Title: \"\",\n          Description: \"\",\n          Duedate: \"\",\n          Priority: \"\",\n        });\n      }\n\n      setTimeout(() => {\n        var completedata = this.props.Listdata;\n        var i;\n        var revserdata = [];\n        for (i = completedata.length - 1; i >= 0; i--) {\n          revserdata.push(completedata[i]);\n        }\n        this.setState({ MyDisplayData: revserdata });\n      }, 100);\n    } else {\n      alert(\"Please Fill All Information\");\n      return false;\n    }\n  };\n\n  Edithandler = (event) => {\n    var edit_id = event.target.id;\n    const data = this.props.Listdata.find((item) => item.id === edit_id);\n    this.setState({\n      Edittaskmodal: true,\n      editid: edit_id,\n      updatedTitle: data.Title,\n      updatedDescription: data.Description,\n      updatedDuedate: data.Duedate,\n      updatedPriority: data.Priority,\n    });\n  };\n\n  updated_submithandler = (event) => {\n    event.preventDefault();\n    this.setState({\n      Edittaskmodal: false,\n    });\n    if (this.state !== \"\") {\n      var newdata = {};\n      newdata.id = this.state.editid;\n      newdata.Title = this.state.updatedTitle;\n      newdata.Description = this.state.updatedDescription;\n      newdata.Duedate = this.state.updatedDuedate;\n      newdata.Priority = this.state.updatedPriority;\n      this.props.dispatch(updated(newdata));\n    }\n  };\n\n  //for remove single value\n  DeleteModalhandler = (id) => {\n    this.setState({\n      Deletetaskmodal: true,\n      Deletetaskid: id,\n    });\n  };\n\n  DeleteTaskhandler = () => {\n    this.props.dispatch(RemoveItemFromList(this.state.Deletetaskid));\n    this.setState({\n      MyDisplayData:this.props.Listdata,\n      Deletetaskmodal: false,\n    });\n  };\n\n  //for comlete status //\n  CompleteTaskhandler = (event) => {\n    var completedid = event.target.id;\n    this.setState({\n      Completedtask: \"done\",\n    });\n    this.props.dispatch(ChangeStatus(completedid));\n  };\n\n  SearchTaskhnadler = (event) => {\n    var searchtext = event.target.value;\n    if (searchtext !== \"\") {\n      const newData = this.state.MyDisplayData.filter(function (item) {\n        const itemData = item.Title\n          ? item.Title.toUpperCase()\n          : \"\".toUpperCase();\n        const textData = searchtext.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      this.setState({\n        MyDisplayData: newData,\n      });\n    } else {\n      var originalData = this.props.Listdata;\n      this.setState({ MyDisplayData: originalData });\n    }\n  };\n\n  // for GroupBySearch\n  GroupSearchchangehandler = (event) => {\n    var selectedvalue = event.target.value;\n\n    if (selectedvalue == \"none\") {\n      let MatcheData = this.props.Listdata.filter(function (obj) {\n        for (var key in obj) {\n          console.log(\"obj\", obj[key]);\n          if (obj[key].includes(selectedvalue)) {\n            return obj;\n          }\n        }\n      });\n      this.setState({\n        MyDisplayData: MatcheData,\n      });\n    }\n     else if (selectedvalue == \"Createdat\") {\n      let SortCreatedat = this.props.Listdata.sort(function (a, b) {\n        var dateA = new Date(a.CreatedAt).getTime();\n        var dateB = new Date(b.CreatedAt).getTime();\n        return dateA > dateB ? 1 : -1;\n      });\n      this.setState({\n        MyDisplayData: SortCreatedat,\n      });\n    } else if (selectedvalue === \"pending\") {\n      let MatchDataPending = this.props.Listdata.filter(function (obj) {\n        for (var key in obj) {\n          if (obj[key].includes(\"pending\")) {\n            return obj;\n          }\n        }\n      });\n      let SortDuedata = this.props.Listdata.sort(function (a, b) {\n        var dateA = new Date(a.Duedate).getTime();\n        var dateB = new Date(b.Duedate).getTime();\n        return dateA > dateB ? 1 : -1;\n      });\n      this.setState({\n        MyDisplayData: SortDuedata,\n      });\n    } else {\n      let MatchDataLow = this.props.Listdata.filter(function (obj) {\n        for (var key in obj) {\n          if (obj[key].includes(\"low\")) {\n            return obj;\n          }\n        }\n      });\n      let MatchDatamedium = this.props.Listdata.filter(function (obj) {\n        for (var key in obj) {\n          if (obj[key].includes(\"medium\")) {\n            return obj;\n          }\n        }\n      });\n      let MatchDatahigh = this.props.Listdata.filter(function (obj) {\n        for (var key in obj) {\n          if (obj[key].includes(\"high\")) {\n            return obj;\n          }\n        }\n      });\n      let MatchDatanone = this.props.Listdata.filter(function (obj) {\n        for (var key in obj) {\n          if (obj[key].includes(\"none\")) {\n            return obj;\n          }\n        }\n      });\n\n      var modifieddata = [\n        ...MatchDataLow,\n        ...MatchDatamedium,\n        ...MatchDatahigh,\n        ...MatchDatanone,\n      ];\n      this.setState({\n        MyDisplayData: modifieddata,\n      });\n    }\n  };\n\n  SortTaskhandler = () => {\n    var SortData = this.state.MyDisplayData.reverse();\n    this.setState({ MyDisplayData: SortData });\n  };\n  Taskdataview = (id) => {\n    var Requestviewdata = this.state.MyDisplayData.find((item) => item.id === id);\n    this.setState({\n      Viewtaskmodal: true,\n      viewTitle: Requestviewdata.Title,\n      viewdDescription: Requestviewdata.Description,\n      viewDuedate: Requestviewdata.Duedate,\n      viewPriority: Requestviewdata.Priority,\n    });\n  };\n\n  render() {\n    var AvailableData = this.state.MyDisplayData;\n    //   console.log(\"InsideRenderdata\",AvailableData);\n\n    if (AvailableData !== null) {\n      var AllTaskList = AvailableData.map((item) => (\n        <tr key={item.id} className={item.CurrentState === \"Done\" ? \"done\" : \"\"}>\n          <td className=\"Title\" onClick={() => this.Taskdataview(item.id)}>\n            {item.Title}\n          </td>\n          <td>{item.Priority}</td>\n          <td>{item.CreatedAt}</td>\n          <td>{item.Duedate}</td>\n          <td>\n            <Button variant=\"primary mr-2 \">\n             <i className=\"fa fa-pencil-square-o\"\n                aria-hidden=\"true\"\n                id={item.id}\n                onClick={this.Edithandler}\n              ></i>\n            </Button>\n\n            {item.CurrentState == \"pending\" ? (\n              <Button\n                variant=\"success mr-2\"\n                id={item.id}\n                onClick={this.CompleteTaskhandler}>\n                Done\n              </Button>\n            ) : (\n              <Button\n                variant=\"secondary mr-2\"\n                className=\"Reopen-button\"\n                id={item.id}>\n                Re-open{\" \"}\n              </Button>\n            )}\n\n            <Button variant=\"danger\">\n              <i className=\"fa fa-trash\"\n                aria-hidden=\"true\"\n                onClick={() => this.DeleteModalhandler(item.id)}\n              ></i>\n            </Button>\n          </td>\n        </tr>\n      ));\n\n      var DisplayPendingtask = AvailableData.filter(function (obj) {\n        for (var key in obj) {\n          if (obj[key].includes(\"pending\")) {\n            return obj;\n          }\n        }\n      });\n\n      var TaskPendingList = DisplayPendingtask.map((item) => (\n        <tr key={item.id}>\n          <td className=\"Title\" onClick={() => this.Taskdataview(item.id)} >{item.Title}</td>\n          <td>{item.Priority}</td>\n          <td>{item.CreatedAt}</td>\n          <td>{item.Duedate}</td>\n          <td>\n            <Button variant=\"primary mr-2 \">\n              <i\n                className=\"fa fa-pencil-square-o\"\n                aria-hidden=\"true\"\n                id={item.id}\n                onClick={this.Edithandler}\n              ></i>\n            </Button>\n            <span>\n              \n              {item.CurrentState === \"pending\" ? (\n                <Button\n                  className=\"Reopen-button\"\n                  variant=\"success mr-2\"\n                  id={item.id}\n                  onClick={this.CompleteTaskhandler}>\n                  Done\n                </Button>\n                ) : (\n                <Button variant=\"secondary mr-2\" id={item.id}>\n                  Re-open\n                </Button>\n              )}\n            </span>\n              <Button variant=\"danger\"><i className=\"fa fa-trash\" aria-hidden=\"true\" onClick={this.DeleteModalhandler}></i></Button>\n          </td>\n        </tr>\n      ));\n\n      var DisplayDonetask = AvailableData.filter(function (obj) {\n        for (var key in obj) {\n          if (obj[key].includes(\"Done\")) {\n            return obj;\n          }\n        }\n      });\n\n      var TaskDoneList = DisplayDonetask.map((item) => (\n        <tr key={item.id}>\n          <td className=\"Title\" onClick={() => this.Taskdataview(item.id)}>{item.Title}</td>\n          <td>{item.Priority}</td>\n          <td>{item.CreatedAt}</td>\n          <td>{item.Duedate}</td>\n          <td>\n            <Button variant=\"primary mr-2 \">\n              <i className=\"fa fa-pencil-square-o\"\n                aria-hidden=\"true\"\n                id={item.id}\n                onClick={this.Edithandler}\n              ></i>\n            </Button>\n            <span>\n              {item.CurrentState === \"pending\" ? (\n                <Button\n                  className=\"Reopen-button\"\n                  variant=\"success mr-2\"\n                  id={item.id}\n                  onClick={this.CompleteTaskhandler}>\n                  Done{\" \"}\n                </Button>\n                ) : (\n                <Button variant=\"secondary mr-2\" id={item.id}>\n                  Re-open{\" \"}\n                </Button>\n              )}\n            </span>\n            <Button variant=\"danger\"><i className=\"fa fa-trash\" aria-hidden=\"true\" onClick={this.DeleteModalhandler}></i></Button>\n          </td>\n        </tr>\n      ));\n    }\n\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col sm={6} className=\"text-left\">\n              <h2 className=\"text-left mt2\">ToDo App</h2>\n            </Col>\n            <Col sm={6} className=\"text-right\">\n              <div>\n                <i\n                  className=\"fa fa-plus-circle fa-2x\"\n                  aria-hidden=\"true\"\n                  onClick={this.AddInfoHandler}\n                ></i>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={4} className=\"text-left\">\n              <Form.Label> Group By</Form.Label>\n              <Form.Control\n                as=\"select\"\n                onChange={this.GroupSearchchangehandler}\n                name=\"groupby\">\n                <option value=\"none\">None</option>\n                <option value=\"Createdat\">Created On</option>\n                <option value=\"pending\">Pending On</option>\n                <option value=\"Priority\">Priority</option>\n              </Form.Control>\n            </Col>\n            <Col sm={8}>\n              <Form.Label>Search</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"search\"\n                placeholder=\"Search Tasks Name\"\n                onChange={this.SearchTaskhnadler}\n              />\n            </Col>\n          </Row>\n          <div>\n            <Modal show={this.state.Addtaskmodal}>\n              <Modal.Header closeButton onClick={this.modalClosehandle}>\n                <Modal.Title>Add Task</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form onSubmit={this.submithandler}>\n                  <Row>\n                    <Col sm={12}>\n                      <Form.Control\n                        type=\"hidden\"\n                        name=\"currentstate\"\n                        value=\"pending\" />\n                      <Form.Group controlId=\"formBasicTitle\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          onChange={this.Titlechangehandler}\n                          name=\"Title\"\n                          maxLength=\"140\"\n                          minLength=\"10\"\n                          required />\n                      </Form.Group>\n                    </Col>\n                    <Col sm={12}>\n                      <Form.Group controlId=\"formBasicDescription\">\n                        <Form.Label> Description</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          rows=\"3\"\n                          onChange={this.Descriptionchangehandler}\n                          maxLength=\"500\"\n                          minLength=\"10\"\n                          name=\"Description\"\n                          required\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col sm={6}>\n                      <Form.Group controlId=\"formBasicDueDate\">\n                        <Form.Label> DueDate</Form.Label>\n                        <Form.Control\n                          type=\"date\"\n                          onChange={this.Duedatechangehandler}\n                          name=\"Duedate\"\n                          required\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col sm={6}>\n                      <Form.Group controlId=\"Priority\">\n                        <Form.Label> Priority</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          onChange={this.Prioritychangehandler}\n                          name=\"Priority\"\n                          required\n                        >\n                          <option >Select Value</option>\n                          <option value=\"none\">None</option>\n                          <option value=\"low\">Low</option>\n                          <option value=\"medium\">Medium</option>\n                          <option value=\"high\">High</option>\n                        </Form.Control>\n                      </Form.Group>\n                    </Col>\n                    <Col sm={12}>\n                      <Form.Group className=\"text-right\">\n                        <Button\n                          variant=\"secondary\"\n                          type=\"submit\"\n                          className=\"themesflat-button blue mr-2\"\n                          onClick={this.modalClosehandle}\n                        >\n                          Cancel\n                        </Button>\n                        <Button\n                          variant=\"success\"\n                          type=\"submit\"\n                          className=\"themesflat-button blue\"\n                        >\n                          Save Changes\n                        </Button>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                </Form>\n              </Modal.Body>\n            </Modal>\n          </div>\n          <div>\n            <Modal show={this.state.Edittaskmodal}>\n              <Modal.Header closeButton onClick={this.modalClosehandle}>\n                <Modal.Title>Edit Task</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form onSubmit={this.updated_submithandler}>\n                  <Row>\n                    <Col sm={12}>\n                      <Form.Control\n                        type=\"hidden\"\n                        name=\"id\"\n                        value={this.state.edit_id}\n                      />\n                      <Form.Group controlId=\"Summery\">\n                        <Form.Label>Summery</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          onChange={this.UpdateTitlechangehandler}\n                          name=\"Title\"\n                          maxLength=\"140\"\n                          minLength=\"10\"\n                          value={this.state.updatedTitle}\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col sm={12}>\n                      <Form.Group controlId=\"Description\">\n                        <Form.Label> Description</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          rows=\"3\"\n                          onChange={this.UpdateDescriptionchangehandler}\n                          maxLength=\"500\"\n                          minLength=\"10\"\n                          name=\"Description\"\n                          value={this.state.updatedDescription}\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col sm={6}>\n                      <Form.Group controlId=\"DueDate\">\n                        <Form.Label> DueDate</Form.Label>\n                        <Form.Control\n                          type=\"date\"\n                          onChange={this.UpdateDuedatechangehandler}\n                          name=\"Duedate\"\n                          value={this.state.updatedDuedate}\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col sm={6}>\n                      <Form.Group controlId=\"Priority\">\n                        <Form.Label> Priority</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          onChange={this.UpdatePrioritychangehandler}\n                          name=\"Priority\"\n                          value={this.state.updatedPriority}>\n                          <option selected>Select Value</option>\n                          <option value=\"none\">None</option>\n                          <option value=\"low\">Low</option>\n                          <option value=\"medium\">Medium</option>\n                          <option value=\"high\">High</option>\n                        </Form.Control>\n                      </Form.Group>\n                    </Col>\n                    <Col sm={12}>\n                      <Form.Group className=\"text-right\">\n                        <Button\n                          variant=\"secondary\"\n                          className=\"themesflat-button blue mr-2\"\n                          onClick={this.modalClosehandle}\n                        >\n                          Cancel\n                        </Button>\n                        <Button\n                          variant=\"success\"\n                          type=\"submit\"\n                          className=\"themesflat-button blue\"\n                        >\n                          Save\n                        </Button>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                </Form>\n              </Modal.Body>\n            </Modal>\n          </div>\n          <div>\n            <Modal show={this.state.Viewtaskmodal}>\n              <Modal.Header closeButton onClick={this.modalClosehandle}>\n                <Modal.Title>View Task</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form>\n                  <Row>\n                    <Col sm={12}>\n                      <Form.Control\n                        type=\"hidden\"\n                        name=\"id\"\n                        value={this.state.edit_id}\n                      />\n                      <Form.Group controlId=\"Summery\">\n                        <Form.Label>Summery</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          onChange={this.UpdateTitlechangehandler}\n                          name=\"Title\"\n                          value={this.state.viewTitle}\n                          readOnly\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col sm={12}>\n                      <Form.Group controlId=\"Description\">\n                        <Form.Label> Description</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          rows=\"3\"\n                          onChange={this.UpdateDescriptionchangehandler}\n                          name=\"Description\"\n                          value={this.state.viewdDescription}\n                          readOnly\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col sm={6}>\n                      <Form.Group controlId=\"DueDate\">\n                        <Form.Label> DueDate</Form.Label>\n                        <Form.Control\n                          type=\"date\"\n                          onChange={this.UpdateDuedatechangehandler}\n                          name=\"Duedate\"\n                          value={this.state.viewDuedate}\n                          readOnly\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col sm={6}>\n                      <Form.Group controlId=\"Priority\">\n                        <Form.Label> Priority</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          onChange={this.UpdatePrioritychangehandler}\n                          name=\"Priority\"\n                          value={this.state.viewPriority}\n                          readOnly\n                        >\n                          <option selected>Select Value</option>\n                          <option value=\"none\">None</option>\n                          <option value=\"low\">Low</option>\n                          <option value=\"medium\">Medium</option>\n                          <option value=\"high\">High</option>\n                        </Form.Control>\n                      </Form.Group>\n                    </Col>\n                    <Col sm={12}>\n                      <Form.Group className=\"text-right\">\n                        <Button\n                          variant=\"secondary\"\n                          className=\"themesflat-button blue mr-2\"\n                          onClick={this.modalClosehandle}\n                        >\n                          Cancel\n                        </Button>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                </Form>\n              </Modal.Body>\n            </Modal>\n          </div>\n          <div>\n            <Modal show={this.state.Deletetaskmodal}>\n              <Modal.Header\n                closeButton\n                onClick={this.modalClosehandle}\n              ></Modal.Header>\n              <Modal.Body>\n                <Row>\n                  <Col sm={12}>\n                    <div className=\"DeleteModal\">\n                      <h4> Do you want to delete this task? </h4>\n                      <Button\n                        variant=\"secondary\"\n                        type=\"submit\"\n                        className=\"themesflat-button blue mr-2\"\n                        onClick={this.modalClosehandle}\n                      >\n                        Cancel\n                      </Button>\n                      <Button\n                        variant=\"success\"\n                        type=\"submit\"\n                        variant=\"danger\"\n                        id={this.state.Deletetaskid}\n                        onClick={this.DeleteTaskhandler}\n                      >\n                        Delete\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </Modal.Body>\n            </Modal>\n          </div>\n          <div className=\"TaskList\">\n            <Tabs>\n              <TabList>\n                <Tab>ALL</Tab>\n                <Tab>Pending</Tab>\n                <Tab>Completed</Tab>\n              </TabList>\n              <TabPanel>\n                <div>\n                  <Table bordered>\n                    <thead>\n                      <tr onClick={this.SortTaskhandler}>\n                        <th>Summery</th>\n                        <th>Priority</th>\n                        <th>Created On</th>\n                        <th>Due by</th>\n                        <th>Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody>{AllTaskList}</tbody>\n                  </Table>\n                </div>\n              </TabPanel>\n              <TabPanel>\n                <div>\n                  <Table bordered>\n                    <thead>\n                      <tr onClick={this.SortTaskhandler}>\n                        <th>Summery</th>\n                        <th>Priority</th>\n                        <th>Created On</th>\n                        <th>Due by</th>\n                        <th>Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody>{TaskPendingList}</tbody>\n                  </Table>\n                </div>\n              </TabPanel>\n              <TabPanel>\n                <div>\n                  <Table bordered>\n                    <thead>\n                      <tr onClick={this.SortTaskhandler}>\n                        <th>Summery</th>\n                        <th>Priority</th>\n                        <th>Created On</th>\n                        <th>Due by</th>\n                        <th>Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody>{TaskDoneList}</tbody>\n                  </Table>\n                </div>\n              </TabPanel>\n            </Tabs>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    Listdata: state.Taskbook,\n  };\n};\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const TaskBook = [];\n\nexport default (state = TaskBook, action) => {\n  switch (action.type) {\n    case \"ADD_LIST\":\n    return [...state, action.payload];\n\n    case \"REMOVE_ITEM_FOM_LIST\":\n      var selected = action.payload;\n      var index = state.findIndex(x => x.id == selected);\n      state.splice(index, 1);\n      return [...state];\n\n    case \"FOR_UPDATED\":\n      var EditData = action.payload;\n      const Data = state.find((item) => item.id === EditData.id);\n      Data.Title = EditData.Title;\n      Data.Description = EditData.Description;\n      Data.Duedate = EditData.Duedate;\n      Data.Priority = EditData.Priority;\n      return [...state];\n\n    case \"CHANGE_STATUS_TASK\":\n      const AllData = state.find((item) => item.id === action.payload);\n      AllData.CurrentState = \"Done\";\n      return [...state];\n\n    default:\n      return state;\n  }\n};\n","import Taskbookreducer from './TaskBookReducer';\nimport {combineReducers} from 'redux';\n\nexport default combineReducers({\n    Taskbook:Taskbookreducer,\n    \n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Mystore from './practice/store/store';\nimport {Provider} from 'react-redux';\n\nconst store = Mystore();\n\nconst jsx= (\n    <Provider store={store}>\n       <App />          \n    </Provider>\n)\nconsole.log(\"fff\",store.getState())\nReactDOM.render(jsx, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n\n// const element=<h1>welcome to Website</h1>\n\n// ReactDOM.render(element,document.getElementById('root'));","import {createStore,combineReducers,applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootreducer from '../reducers/RootReducer';\n\n\nexport default()=>{\n    const store = createStore(rootreducer,applyMiddleware(thunk));\n    return store;\n}\n\n"],"sourceRoot":""}